app MyStudents {
  wasp: {
    version: "^0.11.1"
  },
  title: "MyStudents",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    students Student[]
psl=}

entity Student {=psl
    id     Int    @id @default(autoincrement())
    name   String
    age    Int
    user   User   @relation(fields: [userId], references: [id])
    userId Int
psl=}

action createStudent {
  fn: import { createStudent } from "@server/actions.js",
  entities: [Student]
}

action updateStudent {
  fn: import { updateStudent } from "@server/actions.js",
  entities: [Student]
}

query getStudents {
  fn: import { getStudents } from "@server/queries.js",
  entities: [Student]
}

query getStudent {
  fn: import { getStudent } from "@server/queries.js",
  entities: [Student]
}

route StudentsRoute { path: "/students", to: StudentsPage }
page StudentsPage {
  component: import { Students } from "@client/pages/Students.jsx",
  authRequired: true
}

route StudentDetailsRoute { path: "/students/:studentId", to: StudentDetailsPage }
page StudentDetailsPage {
  component: import { StudentDetails } from "@client/pages/StudentDetails.jsx",
  authRequired: true
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { DashboardPage } from "@client/pages/Dashboard.jsx",
  authRequired: true
}
